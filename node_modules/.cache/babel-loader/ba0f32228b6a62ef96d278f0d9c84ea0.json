{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Desktop\\\\React\\\\MERNTask\\\\cliente\\\\src\\\\contexts\\\\autenticacion\\\\AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport clienteAxios from '../../config/axios';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBETENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERRONEO, CERRAR_SESION } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  //State inicial\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //Funciones\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('api/usuarios', datos);\n      console.log(respuesta);\n      dispatch({\n        type: REGISTRO_EXITOSO\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: REGISTRO_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/alstanley/Desktop/React/MERNTask/cliente/src/contexts/autenticacion/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","REGISTRO_EXITOSO","REGISTRO_ERROR","OBETENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERRONEO","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","console","log","type","error","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,SACIC,gBADJ,EAEIC,cAFJ,EAGIC,gBAHJ,EAIIC,aAJJ,EAKIC,aALJ,EAMIC,aANJ,QAOO,aAPP;;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,WAAW,EAAE,IAFI;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;AAOA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBpB,UAAU,CAACE,WAAD,EAAcU,YAAd,CAAtC,CAVyB,CAYzB;;AACA,QAAMS,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACtC,QAAG;AAEF,YAAMC,SAAS,GAAG,MAAMpB,YAAY,CAACqB,IAAb,CAAkB,cAAlB,EAAkCF,KAAlC,CAAxB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEDH,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEvB;AADD,OAAD,CAAR;AAIC,KATD,CASC,OAAOwB,KAAP,EAAa;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEAR,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEtB;AADD,OAAD,CAAR;AAGD;AACJ,GAjBD;;AAqBA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACJQ,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADT;AAEJG,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAFf;AAGJC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHX;AAIJC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AAJX,KADX;AAAA,cAQKP,KAAK,CAACkB;AARX;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA9CD;;GAAMnB,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useReducer }  from 'react';\r\nimport AuthContext from './AuthContext';\r\nimport AuthReducer from './AuthReducer';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBETENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERRONEO,\r\n    CERRAR_SESION\r\n} from '../../types'\r\n\r\n\r\nconst AuthState = (props) => {\r\n\r\n    //State inicial\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null\r\n    };\r\n\r\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n\r\n    //Funciones\r\n    const registrarUsuario = async (datos) => {\r\n        try{\r\n        \r\n         const respuesta = await clienteAxios.post('api/usuarios', datos);\r\n         console.log(respuesta);\r\n\r\n        dispatch({\r\n            type: REGISTRO_EXITOSO\r\n        })\r\n\r\n        }catch (error){\r\n          console.log(error);\r\n          \r\n          dispatch({\r\n              type: REGISTRO_ERROR\r\n          })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <AuthContext.Provider\r\n            value={{\r\n               token: state.token,\r\n               autenticado: state.autenticado,\r\n               usuario: state.usuario,\r\n               mensaje: state.mensaje\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}