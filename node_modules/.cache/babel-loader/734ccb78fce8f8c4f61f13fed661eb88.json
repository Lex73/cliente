{"ast":null,"code":"import _defineProperty from\"C:/Users/alstanley/Documents/GitHub/cliente/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/alstanley/Documents/GitHub/cliente/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/alstanley/Documents/GitHub/cliente/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import proyectoContext from'../../context/proyectos/proyectoContext';import tareaContext from'../../context/tareas/tareaContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormTarea=function FormTarea(){// Extrar si un proyecto esta activo\nvar proyectosContext=useContext(proyectoContext);var proyecto=proyectosContext.proyecto;// obtener la funci贸n del context de tarea\nvar tareasContext=useContext(tareaContext);var tareaseleccionada=tareasContext.tareaseleccionada,errortarea=tareasContext.errortarea,agregarTarea=tareasContext.agregarTarea,validarTarea=tareasContext.validarTarea,obtenerTareas=tareasContext.obtenerTareas,actualizarTarea=tareasContext.actualizarTarea,limpiarTarea=tareasContext.limpiarTarea;// Effect que detecta si hay una tarea seleccionada\nuseEffect(function(){if(tareaseleccionada!==null){guardarTarea(tareaseleccionada);}else{guardarTarea({nombre:''});}},[tareaseleccionada]);// State del formulario\nvar _useState=useState({nombre:''}),_useState2=_slicedToArray(_useState,2),tarea=_useState2[0],guardarTarea=_useState2[1];// extraer el nombre del proyecto\nvar nombre=tarea.nombre;// Si no hay proyecto seleccionado\nif(!proyecto)return null;// Array destructuring para extraer el proyecto actual\nvar _proyecto=_slicedToArray(proyecto,1),proyectoActual=_proyecto[0];// Leer los valores del formulario\nvar handleChange=function handleChange(e){guardarTarea(_objectSpread(_objectSpread({},tarea),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();// validar\nif(nombre.trim()===''){validarTarea();return;}// Si es edici贸n o si es nueva tarea\nif(tareaseleccionada===null){// agregar la nueva tarea al state de tareas\ntarea.proyecto=proyectoActual._id;agregarTarea(tarea);}else{// actualizar tarea existente\nactualizarTarea(tarea);// Elimina tareaseleccionada del state\nlimpiarTarea();}// Obtener y filtrar las tareas del proyecto actual\nobtenerTareas(proyectoActual._id);// reiniciar el form\nguardarTarea({nombre:''});};return/*#__PURE__*/_jsxs(\"div\",{className:\"formulario\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"contenedor-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-text\",placeholder:\"Nombre Tarea...\",name:\"nombre\",value:nombre,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"contenedor-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"btn btn-primario btn-submit btn-block\",value:tareaseleccionada?'Editar Tarea':'Agregar Tarea'})})]}),errortarea?/*#__PURE__*/_jsx(\"p\",{className:\"mensaje error\",children:\"El nombre de la tarea es obligatorio\"}):null]});};export default FormTarea;","map":{"version":3,"sources":["C:/Users/alstanley/Documents/GitHub/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","guardarTarea","nombre","tarea","proyectoActual","handleChange","e","target","name","value","onSubmit","preventDefault","trim","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';  \nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n\n    // Extrar si un proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    // obtener la funci贸n del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { tareaseleccionada,  errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\n\n    // Effect que detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if(tareaseleccionada !== null) {\n            guardarTarea(tareaseleccionada)\n        } else {\n            guardarTarea({\n                nombre: ''\n            })\n        }\n    }, [tareaseleccionada]); \n\n    // State del formulario\n    const [tarea, guardarTarea] = useState({\n        nombre: ''\n    })\n\n    // extraer el nombre del proyecto\n    const { nombre } = tarea;\n\n    // Si no hay proyecto seleccionado\n    if(!proyecto) return null;\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] =  proyecto;\n\n    // Leer los valores del formulario\n    const handleChange = e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // validar\n        if(nombre.trim() === '' ) {\n            validarTarea();\n            return;\n        }\n\n        // Si es edici贸n o si es nueva tarea\n        if(tareaseleccionada === null ) {\n            // agregar la nueva tarea al state de tareas\n            tarea.proyecto = proyectoActual._id;\n            agregarTarea(tarea);\n        } else {\n            // actualizar tarea existente\n            actualizarTarea(tarea);\n\n            // Elimina tareaseleccionada del state\n            limpiarTarea();\n        }\n        // Obtener y filtrar las tareas del proyecto actual\n        obtenerTareas(proyectoActual._id);\n\n        // reiniciar el form\n        guardarTarea({\n            nombre: ''\n        })\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea...\"\n                        name=\"nombre\"\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null }\n        </div>\n     );\n}\n \nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}