{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Desktop\\\\React\\\\MERNTask\\\\cliente\\\\src\\\\components\\\\tareas\\\\Tarea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport ProyectoContext from '../../contexts/proyectos/ProyectoContext';\nimport TareaContext from '../../contexts/tareas/TareaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tarea = ({\n  tarea\n}) => {\n  _s();\n\n  // Extrar si un proyecto esta activo\n  const proyectosContext = useContext(ProyectoContext);\n  const {\n    proyecto\n  } = proyectosContext; // obtener la función del context de tarea\n\n  const tareasContext = useContext(TareaContext);\n  const {\n    eliminarTarea,\n    obtenerTareas,\n    actualizarTarea,\n    guardarTareaActual\n  } = tareasContext; // Extraer el proyecto\n\n  const [proyectoActual] = proyecto; // Función que se ejecuta cuando el usuario presiona el btn de eliminar tarea\n\n  const tareaEliminar = id => {\n    eliminarTarea(id, proyectoActual._id);\n    obtenerTareas(proyectoActual.id);\n  }; // Función que modifica el estado de las tareas\n\n\n  const cambiarEstado = tarea => {\n    if (tarea.estado) {\n      tarea.estado = false;\n    } else {\n      tarea.estado = true;\n    }\n\n    actualizarTarea(tarea);\n  }; // Agrega una tarea actual cuando el usuario desea editarla\n\n\n  const seleccionarTarea = tarea => {\n    guardarTareaActual(tarea);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tarea sombra\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tarea.nombre, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"estado\",\n      children: tarea.estado ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"completo\",\n        onClick: () => cambiarEstado(tarea),\n        children: \"Completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"incompleto\",\n        onClick: () => cambiarEstado(tarea),\n        children: \"Incompleto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"acciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primario\",\n        onClick: () => seleccionarTarea(tarea),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secundario\",\n        onClick: () => tareaEliminar(tarea._id),\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tarea, \"kc5PZ0t0WFA5XV+M13ZiIUe3b/M=\");\n\n_c = Tarea;\nexport default Tarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tarea\");","map":{"version":3,"sources":["C:/Users/alstanley/Desktop/React/MERNTask/cliente/src/components/tareas/Tarea.js"],"names":["React","useContext","ProyectoContext","TareaContext","Tarea","tarea","proyectosContext","proyecto","tareasContext","eliminarTarea","obtenerTareas","actualizarTarea","guardarTareaActual","proyectoActual","tareaEliminar","id","_id","cambiarEstado","estado","seleccionarTarea","nombre"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAEvB;AACA,QAAMC,gBAAgB,GAAGL,UAAU,CAACC,eAAD,CAAnC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAeD,gBAArB,CAJuB,CAMvB;;AACA,QAAME,aAAa,GAAGP,UAAU,CAACE,YAAD,CAAhC;AACA,QAAM;AAAEM,IAAAA,aAAF;AAAiBC,IAAAA,aAAjB;AAAgCC,IAAAA,eAAhC;AAAiDC,IAAAA;AAAjD,MAAwEJ,aAA9E,CARuB,CAWvB;;AACA,QAAM,CAACK,cAAD,IAAmBN,QAAzB,CAZuB,CAcvB;;AACA,QAAMO,aAAa,GAAGC,EAAE,IAAI;AACxBN,IAAAA,aAAa,CAACM,EAAD,EAAKF,cAAc,CAACG,GAApB,CAAb;AACAN,IAAAA,aAAa,CAACG,cAAc,CAACE,EAAhB,CAAb;AACH,GAHD,CAfuB,CAoBvB;;;AACA,QAAME,aAAa,GAAGZ,KAAK,IAAI;AAC3B,QAAGA,KAAK,CAACa,MAAT,EAAiB;AACbb,MAAAA,KAAK,CAACa,MAAN,GAAe,KAAf;AACH,KAFD,MAEO;AACHb,MAAAA,KAAK,CAACa,MAAN,GAAe,IAAf;AACH;;AACDP,IAAAA,eAAe,CAACN,KAAD,CAAf;AACH,GAPD,CArBuB,CA8BvB;;;AACA,QAAMc,gBAAgB,GAAGd,KAAK,IAAI;AAC9BO,IAAAA,kBAAkB,CAACP,KAAD,CAAlB;AACH,GAFD;;AAIA,sBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,4BACI;AAAA,iBAAIA,KAAK,CAACe,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACKf,KAAK,CAACa,MAAN,gBAGO;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,UAFd;AAGI,QAAA,OAAO,EAAE,MAAMD,aAAa,CAACZ,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHP,gBAWO;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,OAAO,EAAE,MAAMY,aAAa,CAACZ,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZZ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAwBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,kBAFd;AAGI,QAAA,OAAO,EAAE,MAAMc,gBAAgB,CAACd,KAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,oBAFd;AAGI,QAAA,OAAO,EAAE,MAAMS,aAAa,CAACT,KAAK,CAACW,GAAP,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CA3ED;;GAAMZ,K;;KAAAA,K;AA6EN,eAAeA,KAAf","sourcesContent":["\r\nimport React, { useContext } from 'react';\r\nimport ProyectoContext from '../../contexts/proyectos/ProyectoContext';\r\nimport TareaContext from '../../contexts/tareas/TareaContext';\r\n\r\nconst Tarea = ({tarea}) => {\r\n\r\n    // Extrar si un proyecto esta activo\r\n    const proyectosContext = useContext(ProyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    // obtener la función del context de tarea\r\n    const tareasContext = useContext(TareaContext);\r\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\r\n\r\n\r\n    // Extraer el proyecto\r\n    const [proyectoActual] = proyecto;\r\n \r\n    // Función que se ejecuta cuando el usuario presiona el btn de eliminar tarea\r\n    const tareaEliminar = id => {\r\n        eliminarTarea(id, proyectoActual._id);\r\n        obtenerTareas(proyectoActual.id)\r\n    }\r\n\r\n    // Función que modifica el estado de las tareas\r\n    const cambiarEstado = tarea => {\r\n        if(tarea.estado) {\r\n            tarea.estado = false;\r\n        } else {\r\n            tarea.estado = true\r\n        }\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    // Agrega una tarea actual cuando el usuario desea editarla\r\n    const seleccionarTarea = tarea => {\r\n        guardarTareaActual(tarea);\r\n    }\r\n\r\n    return ( \r\n        <li className=\"tarea sombra\">\r\n            <p>{tarea.nombre} </p>\r\n\r\n            <div className=\"estado\">\r\n                {tarea.estado \r\n                ?  \r\n                    (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"completo\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                        >Completo</button>\r\n                    )\r\n                : \r\n                    (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"incompleto\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                        >Incompleto</button>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div className=\"acciones\">\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={() => seleccionarTarea(tarea) }\r\n                >Editar</button>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={() => tareaEliminar(tarea._id)}\r\n                >Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Tarea;"]},"metadata":{},"sourceType":"module"}