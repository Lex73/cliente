{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Desktop\\\\React\\\\MERNTask\\\\cliente\\\\src\\\\contexts\\\\tareas\\\\TareaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport clienteAxios from \"../../config/axios\";\nimport TareaContext from './TareaContext';\nimport TareaReducer from './TareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, MODIFICAR_TAREA, LIMPIAR_TAREA } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  //State inicial\n  const initialState = {\n    tareasProyecto: [],\n    errorTarea: false,\n    tareaSeleccionada: null\n  }; //Crear Dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //Obtener las tareas de un proyecto\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; //Agregar una tarea al proyecto seleccionado\n\n\n  const agregarTarea = async tarea => {\n    console.log(tarea);\n\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea);\n      console.log(resultado);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: tarea\n      });\n    } catch (error) {}\n  }; //Modificar la tarea seleccionada\n\n\n  const modificaTarea = tarea => {\n    dispatch({\n      type: MODIFICAR_TAREA,\n      payload: tarea\n    });\n  }; //Validacion\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //ELiminar tarea\n\n\n  const eliminarTarea = tareaId => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: tareaId\n    });\n  }; //Cambie estado de la tarea\n\n\n  const cambiaEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  }; //Extrae tarea para edicion\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; //Limpia la tarea seleccionada\n\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareasProyecto: state.tareasProyecto,\n      errorTarea: state.errorTarea,\n      tareaSeleccionada: state.tareaSeleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiaEstadoTarea,\n      guardarTareaActual,\n      modificaTarea,\n      limpiarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["C:/Users/alstanley/Desktop/React/MERNTask/cliente/src/contexts/tareas/TareaState.js"],"names":["React","useReducer","clienteAxios","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","MODIFICAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareasProyecto","errorTarea","tareaSeleccionada","state","dispatch","obtenerTareas","proyectoId","type","payload","agregarTarea","tarea","console","log","resultado","post","error","modificaTarea","validarTarea","eliminarTarea","tareaId","cambiaEstadoTarea","guardarTareaActual","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport clienteAxios from \"../../config/axios\";\r\nimport TareaContext from './TareaContext';\r\nimport TareaReducer from './TareaReducer';\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    ESTADO_TAREA,\r\n    TAREA_ACTUAL,\r\n    MODIFICAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types';\r\n\r\nconst TareaState = (props) => {\r\n    //State inicial\r\n    const initialState = {\r\n     tareasProyecto: [],\r\n     errorTarea: false,\r\n     tareaSeleccionada: null\r\n    };\r\n\r\n    //Crear Dispatch y state\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n    //Obtener las tareas de un proyecto\r\n    const obtenerTareas = (proyectoId) => {\r\n        dispatch({\r\n            type: TAREAS_PROYECTO,\r\n            payload: proyectoId\r\n        })\r\n    };\r\n\r\n    //Agregar una tarea al proyecto seleccionado\r\n    const agregarTarea = async (tarea) => {\r\n        console.log(tarea)\r\n        try{\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n            console.log(resultado);\r\n\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n\r\n        }catch(error){\r\n\r\n        }\r\n    };\r\n\r\n    //Modificar la tarea seleccionada\r\n    const modificaTarea = (tarea) => {\r\n        dispatch({\r\n            type: MODIFICAR_TAREA,\r\n            payload: tarea\r\n        })\r\n    };\r\n    \r\n    //Validacion\r\n    const validarTarea = () => {\r\n        dispatch({ \r\n            type: VALIDAR_TAREA\r\n        })\r\n    };\r\n\r\n    //ELiminar tarea\r\n    const eliminarTarea = (tareaId) => {\r\n        dispatch({\r\n            type: ELIMINAR_TAREA,\r\n            payload: tareaId\r\n        })\r\n    };\r\n\r\n    //Cambie estado de la tarea\r\n    const cambiaEstadoTarea = (tarea) =>{\r\n        dispatch({\r\n            type: ESTADO_TAREA,\r\n            payload: tarea\r\n        })\r\n    };\r\n\r\n    //Extrae tarea para edicion\r\n    const guardarTareaActual = (tarea) =>{\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        }) \r\n    };\r\n\r\n    //Limpia la tarea seleccionada\r\n    const limpiarTarea = () => {\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        }) \r\n    };\r\n\r\n    return(\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasProyecto: state.tareasProyecto,\r\n                errorTarea: state.errorTarea,\r\n                tareaSeleccionada: state.tareaSeleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                cambiaEstadoTarea,\r\n                guardarTareaActual,\r\n                modificaTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}