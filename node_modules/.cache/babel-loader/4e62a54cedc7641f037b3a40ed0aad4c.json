{"ast":null,"code":"import _slicedToArray from\"C:/Users/alstanley/Documents/GitHub/cliente/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import alertaReducer from'./alertaReducer';import alertaContext from'./alertaContext';import{MOSTRAR_ALERTA,OCULTAR_ALERTA}from'../../types';import{jsx as _jsx}from\"react/jsx-runtime\";var AlertaState=function AlertaState(props){var initialState={alerta:null};var _useReducer=useReducer(alertaReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Funciones\nvar mostrarAlerta=function mostrarAlerta(msg,categoria){dispatch({type:MOSTRAR_ALERTA,payload:{msg:msg,categoria:categoria}});// Después de 5 segundos limpiar la alerta\nsetTimeout(function(){dispatch({type:OCULTAR_ALERTA});},5000);};return/*#__PURE__*/_jsx(alertaContext.Provider,{value:{alerta:state.alerta,mostrarAlerta:mostrarAlerta},children:props.children});};export default AlertaState;","map":{"version":3,"sources":["C:/Users/alstanley/Documents/GitHub/cliente/src/context/alertas/alertaState.js"],"names":["React","useReducer","alertaReducer","alertaContext","MOSTRAR_ALERTA","OCULTAR_ALERTA","AlertaState","props","initialState","alerta","state","dispatch","mostrarAlerta","msg","categoria","type","payload","setTimeout","children"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,OAASC,cAAT,CAAyBC,cAAzB,KAA8C,aAA9C,C,2CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CACzB,GAAMC,CAAAA,YAAY,CAAG,CACjBC,MAAM,CAAE,IADS,CAArB,CADyB,gBAKGR,UAAU,CAACC,aAAD,CAAgBM,YAAhB,CALb,4CAKjBE,KALiB,iBAKVC,QALU,iBAOzB;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAMC,SAAN,CAAoB,CACtCH,QAAQ,CAAC,CACLI,IAAI,CAAGX,cADF,CAELY,OAAO,CAAE,CACLH,GAAG,CAAHA,GADK,CAELC,SAAS,CAATA,SAFK,CAFJ,CAAD,CAAR,CAQA;AACAG,UAAU,CAAC,UAAM,CACbN,QAAQ,CAAC,CACLI,IAAI,CAAEV,cADD,CAAD,CAAR,CAGH,CAJS,CAIP,IAJO,CAAV,CAKH,CAfD,CAkBA,mBACI,KAAC,aAAD,CAAe,QAAf,EACI,KAAK,CAAE,CACHI,MAAM,CAAEC,KAAK,CAACD,MADX,CAEHG,aAAa,CAAbA,aAFG,CADX,UAMKL,KAAK,CAACW,QANX,EADJ,CAUH,CApCD,CAsCA,cAAeZ,CAAAA,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\n\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [ state, dispatch ] = useReducer(alertaReducer, initialState);\n\n    // Funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type:  MOSTRAR_ALERTA,\n            payload: {\n                msg, \n                categoria\n            }\n        });\n\n        // Después de 5 segundos limpiar la alerta\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        > \n            {props.children}\n        </alertaContext.Provider>\n    )\n}\n\nexport default AlertaState;"]},"metadata":{},"sourceType":"module"}