{"ast":null,"code":"import _defineProperty from\"C:/Users/alstanley/Documents/GitHub/cliente/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/alstanley/Documents/GitHub/cliente/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/alstanley/Documents/GitHub/cliente/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{Link}from'react-router-dom';import AlertaContext from'../../context/alertas/alertaContext';import AuthContext from'../../context/autenticacion/authContext';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Login=function Login(props){// extraer los valores del context\nvar alertaContext=useContext(AlertaContext);var alerta=alertaContext.alerta,mostrarAlerta=alertaContext.mostrarAlerta;var authContext=useContext(AuthContext);var mensaje=authContext.mensaje,autenticado=authContext.autenticado,iniciarSesion=authContext.iniciarSesion;// En caso de que el password o usuario no exista\nuseEffect(function(){if(autenticado){props.history.push('/proyectos');}if(mensaje){mostrarAlerta(mensaje.msg,mensaje.categoria);}// eslint-disable-next-line\n},[mensaje,autenticado,props.history]);// State para iniciar sesión\nvar _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),usuario=_useState2[0],guardarUsuario=_useState2[1];// extraer de usuario\nvar email=usuario.email,password=usuario.password;var onChange=function onChange(e){guardarUsuario(_objectSpread(_objectSpread({},usuario),{},_defineProperty({},e.target.name,e.target.value)));};// Cuando el usuario quiere iniciar sesión\nvar onSubmit=function onSubmit(e){e.preventDefault();// Validar que no haya campos vacios\nif(email.trim()===''||password.trim()===''){mostrarAlerta('Todos los campos son obligatorios','alerta-error');}// Pasarlo al action\niniciarSesion({email:email,password:password});};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-usuario\",children:[alerta?/*#__PURE__*/_jsxs(\"div\",{className:\"alerta \".concat(alerta.categoria),children:[\" \",alerta.msg,\" \"]}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"contenedor-form sombra-dark\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Iniciar Sesi\\xF3n\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"campo-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",placeholder:\"Tu Email\",value:email,onChange:onChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"campo-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",placeholder:\"Tu Password\",value:password,onChange:onChange})]}),/*#__PURE__*/_jsx(\"div\",{className:\"campo-form\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"btn btn-primario btn-block\",value:\"Iniciar Sesi\\xF3n\"})})]}),/*#__PURE__*/_jsx(Link,{to:'/nueva-cuenta',className:\"enlace-cuenta\",children:\"Obtener Cuenta\"})]})]});};export default Login;","map":{"version":3,"sources":["C:/Users/alstanley/Documents/GitHub/cliente/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","Link","AlertaContext","AuthContext","Login","props","alertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","iniciarSesion","history","push","msg","categoria","email","password","usuario","guardarUsuario","onChange","e","target","name","value","onSubmit","preventDefault","trim"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = (props) => {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSesion } = authContext;\n\n      // En caso de que el password o usuario no exista\n      useEffect(() => {\n        if(autenticado) {\n            props.history.push('/proyectos');\n        }\n\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    // State para iniciar sesión\n    const [usuario, guardarUsuario] = useState({\n        email: '',\n        password: ''\n    });\n\n    // extraer de usuario\n    const { email, password } = usuario;\n\n    const onChange = e => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario quiere iniciar sesión\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // Validar que no haya campos vacios\n        if(email.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n\n        // Pasarlo al action\n        iniciarSesion({ email, password });\n    }\n\n\n\n    return ( \n        <div className=\"form-usuario\">\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\n\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input \n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar Sesión\" />\n                    </div>\n                </form>\n\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\n                    Obtener Cuenta\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}