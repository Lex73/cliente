{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Desktop\\\\React\\\\MERNTask\\\\cliente\\\\src\\\\contexts\\\\proyectos\\\\ProyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport ProyectoContext from './ProyectoContext';\nimport ProyectoReducer from './ProyectoReducer';\nimport clienteAxios from \"../../config/axios\";\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProyectoState = props => {\n  _s();\n\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorFormulario: false,\n    proyecto: null\n  }; //Dispatch para las acciones\n\n  const [state, dispatch] = useReducer(ProyectoReducer, initialState); //Funciones las el CRUD\n  //Muestra el form\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //Obtener los proyectos\n\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/proyectos');\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    ;\n  }; //Nuevo Proyecto\n\n\n  const nuevoProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto); // //Inserto en el state\n\n      dispatch({\n        type: AGREAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Validación por errore\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //Selecciona el proyecto cliqueado\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; //Eliminar proyecto\n\n\n  const eliminarProyecto = proyectoId => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: proyectoId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorFormulario: state.errorFormulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      nuevoProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProyectoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["C:/Users/alstanley/Desktop/React/MERNTask/cliente/src/contexts/proyectos/ProyectoState.js"],"names":["React","useReducer","ProyectoContext","ProyectoReducer","clienteAxios","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","ProyectoState","props","initialState","proyectos","formulario","errorFormulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","console","log","nuevoProyecto","post","mostrarError","proyectoActual","proyectoId","eliminarProyecto","children"],"mappings":"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","sourcesContent":["import React, { useReducer }  from 'react';\r\nimport ProyectoContext from './ProyectoContext';\r\nimport ProyectoReducer from './ProyectoReducer';\r\nimport clienteAxios from \"../../config/axios\";\r\nimport {\r\n        FORMULARIO_PROYECTO,\r\n        OBTENER_PROYECTOS,\r\n        AGREAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTUAL,\r\n        ELIMINAR_PROYECTO\r\n} from '../../types';\r\n\r\nconst ProyectoState = (props) => {\r\n\r\n    const initialState = {\r\n        proyectos : [],\r\n        formulario: false ,\r\n        errorFormulario: false,\r\n        proyecto: null\r\n    };\r\n\r\n    //Dispatch para las acciones\r\n    const [state, dispatch] = useReducer(ProyectoReducer,initialState)\r\n\r\n    //Funciones las el CRUD\r\n    //Muestra el form\r\n    const mostrarFormulario = () =>{\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    };\r\n\r\n    //Obtener los proyectos\r\n    const obtenerProyectos = async () => {\r\n\r\n        try{\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            });\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        };\r\n\r\n        \r\n    };\r\n\r\n    //Nuevo Proyecto\r\n    const nuevoProyecto = async (proyecto) => {\r\n       \r\n        try{\r\n\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n\r\n            // //Inserto en el state\r\n            dispatch({\r\n                type: AGREAR_PROYECTO,\r\n                payload: resultado.data\r\n             });\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    };\r\n\r\n    //Validación por errore\r\n    const mostrarError = () => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    };\r\n\r\n    //Selecciona el proyecto cliqueado\r\n    const proyectoActual= (proyectoId) => {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    };\r\n\r\n    //Eliminar proyecto\r\n    const eliminarProyecto = (proyectoId) => {\r\n        dispatch({\r\n            type: ELIMINAR_PROYECTO,\r\n            payload: proyectoId\r\n        })\r\n    };\r\n\r\n    return (\r\n        <ProyectoContext.Provider\r\n            value={{\r\n                proyectos: state.proyectos,\r\n                formulario: state.formulario,\r\n                errorFormulario: state.errorFormulario,\r\n                proyecto: state.proyecto,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                nuevoProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ProyectoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}