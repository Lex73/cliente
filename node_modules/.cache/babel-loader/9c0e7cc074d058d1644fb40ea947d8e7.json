{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Desktop\\\\React\\\\MERNTask\\\\cliente\\\\src\\\\contexts\\\\autenticacion\\\\AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./AuthContext\";\nimport AuthReducer from \"./AuthReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport tokenAuth from '../../config/tokenAuth';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERRONEO, CERRAR_SESION } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  //State inicial\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //Funciones\n  //Registra usuario\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post(\"api/usuarios\", datos);\n      console.log(respuesta.data);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      }); //Obtenemos el usuario autenticado luego de que el registro sea exitoso\n\n      usuarioAutenticado();\n    } catch (error) {\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //Retorna Usuario autenticado\n\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      tokenAuth(token);\n    }\n\n    ;\n\n    try {\n      const respuesta = await clienteAxios.get('/api/auth'); //console.log(respuesta);\n\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_ERRONEO\n      });\n    }\n  }; //Inicio de sesion\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/auth', datos);\n      console.log(respuesta);\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: LOGIN_ERRONEO,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario,\n      usuarioAutenticado,\n      iniciarSesion\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/alstanley/Desktop/React/MERNTask/cliente/src/contexts/autenticacion/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERRONEO","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","console","log","data","type","payload","usuarioAutenticado","error","alerta","msg","response","categoria","get","iniciarSesion","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SACEC,gBADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,aANF,QAOO,aAPP;;;AASA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AACA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,WAAW,EAAE,IAFM;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAApC,CAT2B,CAW3B;AACA;;AACA,QAAMS,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC,QAAI;AACF,YAAMC,SAAS,GAAG,MAAMrB,YAAY,CAACsB,IAAb,CAAkB,cAAlB,EAAkCF,KAAlC,CAAxB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,IAAtB;AAEAP,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAExB,gBADC;AAEPyB,QAAAA,OAAO,EAAEN,SAAS,CAACI;AAFZ,OAAD,CAAR,CAJE,CASF;;AACAG,MAAAA,kBAAkB;AACnB,KAXD,CAWE,OAAOC,KAAP,EAAc;AACd,YAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,CAAeP,IAAf,CAAoBM,GADZ;AAEbE,QAAAA,SAAS,EAAE;AAFE,OAAf;AAKAf,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEvB,cADC;AAEPwB,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID;AACF,GAvBD,CAb2B,CAsC3B;;;AACA,QAAMF,kBAAkB,GAAG,YAAY;AACrC,UAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGF,KAAH,EAAS;AACPV,MAAAA,SAAS,CAACU,KAAD,CAAT;AACD;;AAAA;;AAGD,QAAG;AACD,YAAMU,SAAS,GAAG,MAAMrB,YAAY,CAACkC,GAAb,CAAiB,WAAjB,CAAxB,CADC,CAED;;AAEAhB,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEtB,eADC;AAEPuB,QAAAA,OAAO,EAAEN,SAAS,CAACI;AAFZ,OAAD,CAAR;AAKD,KATD,CASC,OAAMI,KAAN,EAAY;AACXN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAX,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEpB;AADC,OAAD,CAAR;AAGD;AACF,GAtBD,CAvC2B,CA+D3B;;;AACA,QAAM6B,aAAa,GAAG,MAAOf,KAAP,IAAgB;AACpC,QAAG;AACD,YAAMC,SAAS,GAAG,MAAMrB,YAAY,CAACsB,IAAb,CAAkB,WAAlB,EAA+BF,KAA/B,CAAxB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACD,KAHD,CAGC,OAAMQ,KAAN,EAAY;AACXN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACG,QAAN,CAAeP,IAAf,CAAoBM,GAAhC;AACA,YAAMD,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,CAAeP,IAAf,CAAoBM,GADZ;AAEbE,QAAAA,SAAS,EAAE;AAFE,OAAf;AAKAf,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEpB,aADC;AAEPqB,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID;AACF,GAhBD;;AAkBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLnB,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADR;AAELG,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAFd;AAGLC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHV;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLG,MAAAA,gBALK;AAMLS,MAAAA,kBANK;AAOLO,MAAAA;AAPK,KADT;AAAA,cAWG1B,KAAK,CAAC2B;AAXT;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjGD;;GAAM5B,S;;KAAAA,S;AAmGN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport AuthContext from \"./AuthContext\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport tokenAuth from '../../config/tokenAuth';\r\n\r\nimport {\r\n  REGISTRO_EXITOSO,\r\n  REGISTRO_ERROR,\r\n  OBTENER_USUARIO,\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERRONEO,\r\n  CERRAR_SESION,\r\n} from \"../../types\";\r\n\r\nconst AuthState = (props) => {\r\n  //State inicial\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    autenticado: null,\r\n    usuario: null,\r\n    mensaje: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  //Funciones\r\n  //Registra usuario\r\n  const registrarUsuario = async (datos) => {\r\n    try {\r\n      const respuesta = await clienteAxios.post(\"api/usuarios\", datos);\r\n      console.log(respuesta.data);\r\n\r\n      dispatch({\r\n        type: REGISTRO_EXITOSO,\r\n        payload: respuesta.data\r\n      });\r\n\r\n      //Obtenemos el usuario autenticado luego de que el registro sea exitoso\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: 'alerta-error'\r\n      }\r\n\r\n      dispatch({\r\n        type: REGISTRO_ERROR,\r\n        payload: alerta\r\n      });\r\n    }\r\n  };\r\n\r\n  //Retorna Usuario autenticado\r\n  const usuarioAutenticado = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if(token){\r\n      tokenAuth(token);\r\n    };\r\n\r\n  \r\n    try{\r\n      const respuesta = await clienteAxios.get('/api/auth');\r\n      //console.log(respuesta);\r\n\r\n      dispatch({\r\n        type: OBTENER_USUARIO,\r\n        payload: respuesta.data\r\n      });\r\n      \r\n    }catch(error){\r\n      console.log(error);\r\n      dispatch({\r\n        type: LOGIN_ERRONEO\r\n      });\r\n    }\r\n  }\r\n\r\n  //Inicio de sesion\r\n  const iniciarSesion = async (datos) =>{\r\n    try{\r\n      const respuesta = await clienteAxios.post('/api/auth', datos);\r\n      console.log(respuesta);\r\n    }catch(error){\r\n      console.log(error.response.data.msg);\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: 'alerta-error'\r\n      }\r\n\r\n      dispatch({\r\n        type: LOGIN_ERRONEO,\r\n        payload: alerta\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        autenticado: state.autenticado,\r\n        usuario: state.usuario,\r\n        mensaje: state.mensaje,\r\n        registrarUsuario,\r\n        usuarioAutenticado,\r\n        iniciarSesion\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}