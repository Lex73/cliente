{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Desktop\\\\React\\\\MERNTask\\\\cliente\\\\src\\\\contexts\\\\proyectos\\\\ProyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport ProyectoContext from \"./ProyectoContext\";\nimport ProyectoReducer from \"./ProyectoReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO, PROYECTO_ERROR } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProyectoState = props => {\n  _s();\n\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorFormulario: false,\n    proyecto: null,\n    mensaje: null\n  }; //Dispatch para las acciones\n\n  const [state, dispatch] = useReducer(ProyectoReducer, initialState); //Funciones las el CRUD\n  //Muestra el form\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //Obtener los proyectos\n\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get(\"/api/proyectos\");\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //Nuevo Proyecto\n\n\n  const nuevoProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post(\"/api/proyectos\", proyecto); // //Inserto en el state\n\n      dispatch({\n        type: AGREAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //Validación por errore\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //Selecciona el proyecto cliqueado\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; //Eliminar proyecto\n\n\n  const eliminarProyecto = async proyectoId => {\n    console.log(proyectoId);\n\n    try {\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: proyectoId\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorFormulario: state.errorFormulario,\n      proyecto: state.proyecto,\n      mensaje: state.mensaje,\n      mostrarFormulario,\n      obtenerProyectos,\n      nuevoProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProyectoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["C:/Users/alstanley/Desktop/React/MERNTask/cliente/src/contexts/proyectos/ProyectoState.js"],"names":["React","useReducer","ProyectoContext","ProyectoReducer","clienteAxios","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","ProyectoState","props","initialState","proyectos","formulario","errorFormulario","proyecto","mensaje","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","alerta","msg","categoria","nuevoProyecto","post","mostrarError","proyectoActual","proyectoId","eliminarProyecto","console","log","delete","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SACEC,mBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,cAPF,QAQO,aARP;;;AAUA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,EADQ;AAEnBC,IAAAA,UAAU,EAAE,KAFO;AAGnBC,IAAAA,eAAe,EAAE,KAHE;AAInBC,IAAAA,QAAQ,EAAE,IAJS;AAKnBC,IAAAA,OAAO,EAAE;AALU,GAArB,CAD+B,CAS/B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACE,eAAD,EAAkBW,YAAlB,CAApC,CAV+B,CAY/B;AACA;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAElB;AADC,KAAD,CAAR;AAGD,GAJD,CAd+B,CAoB/B;;;AACA,QAAMmB,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,YAAMC,SAAS,GAAG,MAAMrB,YAAY,CAACsB,GAAb,CAAiB,gBAAjB,CAAxB;AAEAL,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEjB,iBADC;AAEPqB,QAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAeb;AAFjB,OAAD,CAAR;AAID,KAPD,CAOE,OAAOc,KAAP,EAAc;AACd,YAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAE,eADQ;AAEbC,QAAAA,SAAS,EAAE;AAFE,OAAf;AAIAX,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEZ,cADC;AAEPgB,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID;AACF,GAlBD,CArB+B,CAyC/B;;;AACA,QAAMG,aAAa,GAAG,MAAOf,QAAP,IAAoB;AACxC,QAAI;AACF,YAAMO,SAAS,GAAG,MAAMrB,YAAY,CAAC8B,IAAb,CAAkB,gBAAlB,EAAoChB,QAApC,CAAxB,CADE,CAGF;;AACAG,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEhB,eADC;AAEPoB,QAAAA,OAAO,EAAEF,SAAS,CAACG;AAFZ,OAAD,CAAR;AAID,KARD,CAQE,OAAOC,KAAP,EAAc;AACd,YAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAE,eADQ;AAEbC,QAAAA,SAAS,EAAE;AAFE,OAAf;AAIAX,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEZ,cADC;AAEPgB,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID;AACF,GAnBD,CA1C+B,CA+D/B;;;AACA,QAAMK,YAAY,GAAG,MAAM;AACzBd,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAGD,GAJD,CAhE+B,CAsE/B;;;AACA,QAAM4B,cAAc,GAAIC,UAAD,IAAgB;AACrChB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEd,eADC;AAEPkB,MAAAA,OAAO,EAAEU;AAFF,KAAD,CAAR;AAID,GALD,CAvE+B,CA8E/B;;;AACA,QAAMC,gBAAgB,GAAG,MAAOD,UAAP,IAAsB;AAC7CE,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AACA,QAAI;AACF,YAAMjC,YAAY,CAACqC,MAAb,CAAqB,kBAAiBJ,UAAW,EAAjD,CAAN;AACAhB,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEb,iBADC;AAEPiB,QAAAA,OAAO,EAAEU;AAFF,OAAD,CAAR;AAID,KAND,CAME,OAAOR,KAAP,EAAc;AACd,YAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAE,eADQ;AAEbC,QAAAA,SAAS,EAAE;AAFE,OAAf;AAIAX,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEZ,cADC;AAEPgB,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID;AACF,GAlBD;;AAoBA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,SAAS,EAAEK,KAAK,CAACL,SADZ;AAELC,MAAAA,UAAU,EAAEI,KAAK,CAACJ,UAFb;AAGLC,MAAAA,eAAe,EAAEG,KAAK,CAACH,eAHlB;AAILC,MAAAA,QAAQ,EAAEE,KAAK,CAACF,QAJX;AAKLC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OALV;AAMLG,MAAAA,iBANK;AAOLE,MAAAA,gBAPK;AAQLS,MAAAA,aARK;AASLE,MAAAA,YATK;AAULC,MAAAA,cAVK;AAWLE,MAAAA;AAXK,KADT;AAAA,cAeGzB,KAAK,CAAC6B;AAfT;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtHD;;GAAM9B,a;;KAAAA,a;AAwHN,eAAeA,aAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport ProyectoContext from \"./ProyectoContext\";\r\nimport ProyectoReducer from \"./ProyectoReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n} from \"../../types\";\r\n\r\nconst ProyectoState = (props) => {\r\n  const initialState = {\r\n    proyectos: [],\r\n    formulario: false,\r\n    errorFormulario: false,\r\n    proyecto: null,\r\n    mensaje: null,\r\n  };\r\n\r\n  //Dispatch para las acciones\r\n  const [state, dispatch] = useReducer(ProyectoReducer, initialState);\r\n\r\n  //Funciones las el CRUD\r\n  //Muestra el form\r\n  const mostrarFormulario = () => {\r\n    dispatch({\r\n      type: FORMULARIO_PROYECTO,\r\n    });\r\n  };\r\n\r\n  //Obtener los proyectos\r\n  const obtenerProyectos = async () => {\r\n    try {\r\n      const resultado = await clienteAxios.get(\"/api/proyectos\");\r\n\r\n      dispatch({\r\n        type: OBTENER_PROYECTOS,\r\n        payload: resultado.data.proyectos,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"Hubo un error\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Nuevo Proyecto\r\n  const nuevoProyecto = async (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.post(\"/api/proyectos\", proyecto);\r\n\r\n      // //Inserto en el state\r\n      dispatch({\r\n        type: AGREAR_PROYECTO,\r\n        payload: resultado.data,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"Hubo un error\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Validación por errore\r\n  const mostrarError = () => {\r\n    dispatch({\r\n      type: VALIDAR_FORMULARIO,\r\n    });\r\n  };\r\n\r\n  //Selecciona el proyecto cliqueado\r\n  const proyectoActual = (proyectoId) => {\r\n    dispatch({\r\n      type: PROYECTO_ACTUAL,\r\n      payload: proyectoId,\r\n    });\r\n  };\r\n\r\n  //Eliminar proyecto\r\n  const eliminarProyecto = async (proyectoId) => {\r\n    console.log(proyectoId);\r\n    try {\r\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n      dispatch({\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: proyectoId,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"Hubo un error\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ProyectoContext.Provider\r\n      value={{\r\n        proyectos: state.proyectos,\r\n        formulario: state.formulario,\r\n        errorFormulario: state.errorFormulario,\r\n        proyecto: state.proyecto,\r\n        mensaje: state.mensaje,\r\n        mostrarFormulario,\r\n        obtenerProyectos,\r\n        nuevoProyecto,\r\n        mostrarError,\r\n        proyectoActual,\r\n        eliminarProyecto,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProyectoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProyectoState;\r\n"]},"metadata":{},"sourceType":"module"}