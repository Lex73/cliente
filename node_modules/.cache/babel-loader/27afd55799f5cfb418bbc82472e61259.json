{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Documents\\\\GitHub\\\\MernTask\\\\cliente\\\\src\\\\components\\\\proyectos\\\\NuevoProyecto.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NuevoProyecto = () => {\n  _s();\n\n  // Obtener el state del formulario\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    errorformulario,\n    mostrarFormulario,\n    agregarProyecto,\n    mostrarError\n  } = proyectosContext; // State para Proyecto\n\n  const [proyecto, guardarProyecto] = useState({\n    nombre: ''\n  }); // Extraer nombre de proyecto\n\n  const {\n    nombre\n  } = proyecto; // Lee los contenidos del input\n\n  const onChangeProyecto = e => {\n    guardarProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  }; // Cuando el usuario envia un proyecto\n\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); // Validar el proyecto\n\n    if (nombre === '') {\n      mostrarError();\n      return;\n    } // agregar al state\n\n\n    agregarProyecto(proyecto); // Reiniciar el form\n\n    guardarProyecto({\n      nombre: ''\n    });\n  }; // Mostrar el formulario\n\n\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-block btn-primario\",\n      onClick: onClickFormulario,\n      children: \"Nuevo Proyecto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), formulario ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formulario-nuevo-proyecto\",\n      onSubmit: onSubmitProyecto,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-text\",\n        placeholder: \"Nombre Proyecto\",\n        name: \"nombre\",\n        value: nombre,\n        onChange: onChangeProyecto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primario btn-block\",\n        value: \"Agregar Proyecto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }, this) : null, errorformulario ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje error\",\n      children: \"El nombre del Proyecto es obligatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NuevoProyecto, \"fqTiRjfAdh1OkdtNyjHYlBylRZI=\");\n\n_c = NuevoProyecto;\nexport default NuevoProyecto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProyecto\");","map":{"version":3,"sources":["C:/Users/alstanley/Documents/GitHub/MernTask/cliente/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useState","useContext","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","nombre","onChangeProyecto","e","target","name","value","onSubmitProyecto","preventDefault","onClickFormulario"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB;AACA,QAAMC,gBAAgB,GAAGH,UAAU,CAACC,eAAD,CAAnC;AACA,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA,eAAd;AAAgCC,IAAAA,iBAAhC;AAAmDC,IAAAA,eAAnD;AAAoEC,IAAAA;AAApE,MAAqFL,gBAA3F,CAJwB,CAOxB;;AACA,QAAM,CAACM,QAAD,EAAWC,eAAX,IAA8BX,QAAQ,CAAC;AACzCY,IAAAA,MAAM,EAAE;AADiC,GAAD,CAA5C,CARwB,CAYxB;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAaF,QAAnB,CAbwB,CAexB;;AACA,QAAMG,gBAAgB,GAAGC,CAAC,IAAI;AAC1BH,IAAAA,eAAe,CAAC,EACZ,GAAGD,QADS;AAEZ,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFf,KAAD,CAAf;AAIH,GALD,CAhBwB,CAuBxB;;;AACA,QAAMC,gBAAgB,GAAGJ,CAAC,IAAI;AAC1BA,IAAAA,CAAC,CAACK,cAAF,GAD0B,CAG1B;;AACA,QAAGP,MAAM,KAAK,EAAd,EAAkB;AACdH,MAAAA,YAAY;AACZ;AACH,KAPyB,CAS1B;;;AACAD,IAAAA,eAAe,CAACE,QAAD,CAAf,CAV0B,CAY1B;;AACAC,IAAAA,eAAe,CAAC;AACZC,MAAAA,MAAM,EAAE;AADI,KAAD,CAAf;AAGH,GAhBD,CAxBwB,CA0CxB;;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC5Bb,IAAAA,iBAAiB;AACpB,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,4BAFd;AAGI,MAAA,OAAO,EAAGa,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAOMf,UAAU,gBAEA;AACI,MAAA,SAAS,EAAC,2BADd;AAEI,MAAA,QAAQ,EAAEa,gBAFd;AAAA,8BAII;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,WAAW,EAAC,iBAHhB;AAII,QAAA,IAAI,EAAC,QAJT;AAKI,QAAA,KAAK,EAAEN,MALX;AAMI,QAAA,QAAQ,EAAEC;AANd;AAAA;AAAA;AAAA;AAAA,cAJJ,eAaI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,4BAFd;AAGI,QAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,GAsBJ,IA7BZ,EA+BMP,eAAe,gBAAG;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAA6E,IA/BlG;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAlFD;;GAAMH,a;;KAAAA,a;AAoFN,eAAeA,aAAf","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    // Obtener el state del formulario\n    const proyectosContext = useContext(proyectoContext);\n    const { formulario, errorformulario,  mostrarFormulario, agregarProyecto, mostrarError } = proyectosContext;\n\n\n    // State para Proyecto\n    const [proyecto, guardarProyecto] = useState({\n        nombre: ''\n    });\n\n    // Extraer nombre de proyecto\n    const {Â nombre } = proyecto;\n\n    // Lee los contenidos del input\n    const onChangeProyecto = e => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario envia un proyecto\n    const onSubmitProyecto = e => {\n        e.preventDefault();\n\n        // Validar el proyecto\n        if(nombre === '') {\n            mostrarError();\n            return;\n        }\n\n        // agregar al state\n        agregarProyecto(proyecto)\n\n        // Reiniciar el form\n        guardarProyecto({\n            nombre: ''\n        })\n    }\n\n    // Mostrar el formulario\n    const onClickFormulario = () => {\n        mostrarFormulario();\n    }\n\n    return ( \n        <Fragment>\n            <button \n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={ onClickFormulario }\n            >Nuevo Proyecto</button>\n\n            { formulario ? \n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitProyecto}\n                        >\n                            <input \n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Nombre Proyecto\"\n                                name=\"nombre\"\n                                value={nombre}\n                                onChange={onChangeProyecto}\n                            />\n\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Agregar Proyecto\"\n                            />\n\n                        </form>\n                ) : null }\n\n            { errorformulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>  : null }\n        </Fragment>\n     );\n}\n \nexport default NuevoProyecto;"]},"metadata":{},"sourceType":"module"}