{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Desktop\\\\React\\\\MERNTask\\\\cliente\\\\src\\\\contexts\\\\autenticacion\\\\AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./AuthContext\";\nimport AuthReducer from \"./AuthReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBETENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERRONEO, CERRAR_SESION } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  //State inicial\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //Funciones\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post(\"api/usuarios\", datos);\n      ;\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: respuesta.data.msg\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/alstanley/Desktop/React/MERNTask/cliente/src/contexts/autenticacion/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","REGISTRO_EXITOSO","REGISTRO_ERROR","OBETENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERRONEO","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","type","payload","data","error","msg","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,SACEC,gBADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,aANF,QAOO,aAPP;;;AASA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AACA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,WAAW,EAAE,IAFM;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACE,WAAD,EAAcU,YAAd,CAApC,CAT2B,CAW3B;;AACA,QAAMS,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC,QAAI;AACF,YAAMC,SAAS,GAAG,MAAMpB,YAAY,CAACqB,IAAb,CAAkB,cAAlB,EAAkCF,KAAlC,CAAxB;AAEA;AAEAF,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAErB,gBADC;AAEPsB,QAAAA,OAAO,EAAEH,SAAS,CAACI;AAFZ,OAAD,CAAR;AAID,KATD,CASE,OAAOC,KAAP,EAAc;AAEdR,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEpB,cADC;AAEPqB,QAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeE;AAFjB,OAAD,CAAR;AAID;AACF,GAjBD;;AAmBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLhB,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADR;AAELG,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAFd;AAGLC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHV;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLG,MAAAA;AALK,KADT;AAAA,cASGV,KAAK,CAACmB;AATT;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5CD;;GAAMpB,S;;KAAAA,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport AuthContext from \"./AuthContext\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nimport {\r\n  REGISTRO_EXITOSO,\r\n  REGISTRO_ERROR,\r\n  OBETENER_USUARIO,\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERRONEO,\r\n  CERRAR_SESION,\r\n} from \"../../types\";\r\n\r\nconst AuthState = (props) => {\r\n  //State inicial\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    autenticado: null,\r\n    usuario: null,\r\n    mensaje: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  //Funciones\r\n  const registrarUsuario = async (datos) => {\r\n    try {\r\n      const respuesta = await clienteAxios.post(\"api/usuarios\", datos);\r\n\r\n      ;\r\n\r\n      dispatch({\r\n        type: REGISTRO_EXITOSO,\r\n        payload: respuesta.data\r\n      });\r\n    } catch (error) {\r\n\r\n      dispatch({\r\n        type: REGISTRO_ERROR,\r\n        payload: respuesta.data.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        autenticado: state.autenticado,\r\n        usuario: state.usuario,\r\n        mensaje: state.mensaje,\r\n        registrarUsuario\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}