{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstanley\\\\Desktop\\\\React\\\\MERNTask\\\\cliente\\\\src\\\\contexts\\\\tareas\\\\TareaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TareaContext from './TareaContext';\nimport TareaReducer from './TareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  //State inicial\n  const initialState = {\n    tareas: [{\n      nombre: 'Tarea 1',\n      estado: true,\n      proyectoId: 1\n    }, {\n      nombre: 'Tarea 1',\n      estado: true,\n      proyectoId: 2\n    }, {\n      nombre: 'Tarea 1',\n      estado: true,\n      proyectoId: 3\n    }, {\n      nombre: 'Tarea 1',\n      estado: true,\n      proyectoId: 4\n    }, {\n      nombre: 'Tarea 2',\n      estado: false,\n      proyectoId: 1\n    }, {\n      nombre: 'Tarea 2',\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: 'Tarea 2',\n      estado: false,\n      proyectoId: 3\n    }, {\n      nombre: 'Tarea 2',\n      estado: false,\n      proyectoId: 4\n    }, {\n      nombre: 'Tarea 3',\n      estado: true,\n      proyectoId: 1\n    }, {\n      nombre: 'Tarea 3',\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: 'Tarea 3',\n      estado: true,\n      proyectoId: 3\n    }, {\n      nombre: 'Tarea 3',\n      estado: false,\n      proyectoId: 4\n    }, {\n      nombre: 'Tarea 4',\n      estado: false,\n      proyectoId: 1\n    }, {\n      nombre: 'Tarea 4',\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: 'Tarea 4',\n      estado: false,\n      proyectoId: 4\n    }],\n    tareasProyecto: null,\n    errorTarea: false\n  }; //Crear Dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //Obtener las tareas de un proyecto\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; //Agregar una tarea al proyecto seleccionado\n\n\n  const agregarTarea = tarea => {\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  }; //Validacion\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareas: state.tareas,\n      tareasProyecto: state.tareasProyecto,\n      errorTarea: state.errorTarea,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["C:/Users/alstanley/Desktop/React/MERNTask/cliente/src/contexts/tareas/TareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","TareaState","props","initialState","tareas","nombre","estado","proyectoId","tareasProyecto","errorTarea","state","dispatch","obtenerTareas","type","payload","agregarTarea","tarea","validarTarea","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,aAHJ,QAIO,aAJP;;;AAMA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAE,CACR;AAACC,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,IAA3B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KADQ,EAER;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,IAA3B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KAFQ,EAGR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,IAA3B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KAHQ,EAIR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,IAA3B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KAJQ,EAKR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KALQ,EAMR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KANQ,EAOR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAPQ,EAQR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KARQ,EASR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,IAA3B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KATQ,EAUR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAVQ,EAWR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,IAA3B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KAXQ,EAYR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAZQ,EAaR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAbQ,EAcR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAdQ,EAeR;AAACF,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAC,KAA3B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAfQ,CADS;AAkBpBC,IAAAA,cAAc,EAAE,IAlBI;AAmBpBC,IAAAA,UAAU,EAAE;AAnBQ,GAArB,CAF0B,CAwB1B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACE,YAAD,EAAeM,YAAf,CAApC,CAzB0B,CA2B1B;;AACA,QAAMS,aAAa,GAAIL,UAAD,IAAgB;AAClCI,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,eADD;AAELgB,MAAAA,OAAO,EAAEP;AAFJ,KAAD,CAAR;AAIH,GALD,CA5B0B,CAmC1B;;;AACA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5BL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd,aADD;AAELe,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD,CApC0B,CA2C1B;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,sBACI,QAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,MAAM,EAAEM,KAAK,CAACN,MADX;AAEHI,MAAAA,cAAc,EAAEE,KAAK,CAACF,cAFnB;AAGHC,MAAAA,UAAU,EAAEC,KAAK,CAACD,UAHf;AAIHG,MAAAA,aAJG;AAKHG,MAAAA,YALG;AAMHE,MAAAA;AANG,KADX;AAAA,cAUKf,KAAK,CAACgB;AAVX;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhED;;GAAMjB,U;;KAAAA,U;AAkEN,eAAeA,UAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport TareaContext from './TareaContext';\r\nimport TareaReducer from './TareaReducer';\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA\r\n} from '../../types';\r\n\r\nconst TareaState = (props) => {\r\n    //State inicial\r\n    const initialState = {\r\n        tareas: [\r\n        {nombre: 'Tarea 1', estado:true, proyectoId: 1},\r\n        {nombre: 'Tarea 1', estado:true, proyectoId: 2},\r\n        {nombre: 'Tarea 1', estado:true, proyectoId: 3},\r\n        {nombre: 'Tarea 1', estado:true, proyectoId: 4},\r\n        {nombre: 'Tarea 2', estado:false, proyectoId: 1},\r\n        {nombre: 'Tarea 2', estado:false, proyectoId: 2},\r\n        {nombre: 'Tarea 2', estado:false, proyectoId: 3},\r\n        {nombre: 'Tarea 2', estado:false, proyectoId: 4},\r\n        {nombre: 'Tarea 3', estado:true, proyectoId: 1},\r\n        {nombre: 'Tarea 3', estado:false, proyectoId: 2},\r\n        {nombre: 'Tarea 3', estado:true, proyectoId: 3},\r\n        {nombre: 'Tarea 3', estado:false, proyectoId: 4},\r\n        {nombre: 'Tarea 4', estado:false, proyectoId: 1},\r\n        {nombre: 'Tarea 4', estado:false, proyectoId: 2},\r\n        {nombre: 'Tarea 4', estado:false, proyectoId: 4}\r\n     ],\r\n     tareasProyecto: null,\r\n     errorTarea: false\r\n    };\r\n\r\n    //Crear Dispatch y state\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n    //Obtener las tareas de un proyecto\r\n    const obtenerTareas = (proyectoId) => {\r\n        dispatch({\r\n            type: TAREAS_PROYECTO,\r\n            payload: proyectoId\r\n        })\r\n    };\r\n\r\n    //Agregar una tarea al proyecto seleccionado\r\n    const agregarTarea = (tarea) => {\r\n        dispatch({\r\n            type: AGREGAR_TAREA,\r\n            payload: tarea\r\n        })\r\n    };\r\n    \r\n    //Validacion\r\n    const validarTarea = () => {\r\n        dispatch({ \r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n\r\n    return(\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareas: state.tareas,\r\n                tareasProyecto: state.tareasProyecto,\r\n                errorTarea: state.errorTarea,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}